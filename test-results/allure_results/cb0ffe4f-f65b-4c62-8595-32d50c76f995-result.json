{"name": "Check all tabs one by one", "status": "failed", "statusDetails": {"message": "AssertionError: The tab is not active\nassert False", "trace": "self = <widget_test.TestWidgets.TestTabs object at 0x000001C83DFCE5D0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3be6feb4f0cf74417531c6d3cac9d565\")>\n\n    @allure.title(\"Check all tabs one by one\")\n    def test_all_tabs(self, driver):\n        tabs_page = TabsPage(driver, \"https://demoqa.com/tabs\")\n        tabs_page.open()\n        what_tab, what_tab_content = tabs_page.check_tabs(1)\n        origin_tab, origin_tab_content = tabs_page.check_tabs(2)\n        use_tab, use_tab_content = tabs_page.check_tabs(3)\n        try:\n>           more_tab, more_tab_content = tabs_page.check_tabs(4)\n\ntests\\widget_test.py:117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\widget_page.py:154: in check_tabs\n    button = self.element_is_visible(tabs[tab_index]['title'])\npages\\base_page.py:15: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\npages\\base_page.py:22: in element_is_present\n    return wait(self.driver, timeout).until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3be6feb4f0cf74417531c6d3cac9d565\")>, method = <function presence_of_element_located.<locals>._predicate at 0x000001C83E2953A0>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF614D92142+3514994]\nE       \t(No symbol) [0x00007FF6149B0CE2]\nE       \t(No symbol) [0x00007FF6148576AA]\nE       \t(No symbol) [0x00007FF6148A1860]\nE       \t(No symbol) [0x00007FF6148A197C]\nE       \t(No symbol) [0x00007FF6148E4EE7]\nE       \t(No symbol) [0x00007FF6148C602F]\nE       \t(No symbol) [0x00007FF6148E28F6]\nE       \t(No symbol) [0x00007FF6148C5D93]\nE       \t(No symbol) [0x00007FF614894BDC]\nE       \t(No symbol) [0x00007FF614895C64]\nE       \tGetHandleVerifier [0x00007FF614DBE16B+3695259]\nE       \tGetHandleVerifier [0x00007FF614E16737+4057191]\nE       \tGetHandleVerifier [0x00007FF614E0E4E3+4023827]\nE       \tGetHandleVerifier [0x00007FF614AE04F9+689705]\nE       \t(No symbol) [0x00007FF6149BC048]\nE       \t(No symbol) [0x00007FF6149B8044]\nE       \t(No symbol) [0x00007FF6149B81C9]\nE       \t(No symbol) [0x00007FF6149A88C4]\nE       \tBaseThreadInitThunk [0x00007FFD79717344+20]\nE       \tRtlUserThreadStart [0x00007FFD7B2E26B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <widget_test.TestWidgets.TestTabs object at 0x000001C83DFCE5D0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3be6feb4f0cf74417531c6d3cac9d565\")>\n\n    @allure.title(\"Check all tabs one by one\")\n    def test_all_tabs(self, driver):\n        tabs_page = TabsPage(driver, \"https://demoqa.com/tabs\")\n        tabs_page.open()\n        what_tab, what_tab_content = tabs_page.check_tabs(1)\n        origin_tab, origin_tab_content = tabs_page.check_tabs(2)\n        use_tab, use_tab_content = tabs_page.check_tabs(3)\n        try:\n            more_tab, more_tab_content = tabs_page.check_tabs(4)\n            assert more_tab == \"More\" and more_tab_content != 0, \"The tab isn't present or not active\"\n        except TimeoutException:\n>           assert False, \"The tab is not active\"\nE           AssertionError: The tab is not active\nE           assert False\n\ntests\\widget_test.py:120: AssertionError"}, "start": 1703186371903, "stop": 1703186379048, "uuid": "0ad77502-ea78-4c3e-b5aa-c04c001cf311", "historyId": "148be218b31b80e5e7db5581c8f4872c", "testCaseId": "148be218b31b80e5e7db5581c8f4872c", "fullName": "tests.widget_test.TestTabs#test_all_tabs", "labels": [{"name": "feature", "value": "Tabs"}, {"name": "suite", "value": "Widget page tests"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestWidgets"}, {"name": "host", "value": "DESKTOP-A8V6P96"}, {"name": "thread", "value": "10480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.widget_test"}]}